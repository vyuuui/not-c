prog = function+
function = type identifier '(' paramlist ')' block
paramlist = type identifier (',' type identifier)* | ε
block = '{' stmt* '}'
stmt = declaration ';' | block | expression ';' | conditional | loop | ret ';'
declaration = type identifier optassign
optassign = '=' expression | ε
loop = 'while' '(' expression ')' block
conditional = 'if' '(' expression ')' block elseconditional
elseconditional = 'else' block | ε
ret = 'return' expression
expression = assignment
assignment = identifier '=' assignment  | identifier '+=' assignment |
             identifier '-=' assignment | identifier '*=' assignment |
             identifier '/=' assignment | identifier '%=' assignment | logicor
logicor = logicand ('||' logicand)*
logicand = eqcomp ('&&' eqcomp)*
eqcomp = ordcomp ('==' ordcomp)* | ordcomp ('!=' orcomp)*
ordcomp = addition ('<' addition)* | addition ('>' addition)* | addition ('<=' addition)* | addition ('>=' addition)*
addition = multiplication ('+' multiplication)* | multiplication ('-' multiplication)*
multiplication = uneg ('*' uneg)* | uneg ('/' uneg)* | uneg ('%' uneg)*
uneg = '-' baseexpr | baseexpr
baseexpr = identifier '(' arglist ')' | identifier | constant | '(' expression ')'
arglist = expression (',' expression)* | ε



type = 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'bool'
constant = 'true' | 'false' | number
number = -?[0-9]+\.[0-9]*
identifier = [A-Za-z][A-Za-z0-9_]*



operator precedence (low to high):
=
+= -=
*= /= %=
||
&&
== !=
< <=
> >=
+ -
* / %
- (unary negate)
() (function call)



